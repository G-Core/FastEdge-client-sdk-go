openapi: 3.0.1

info:
  title: FastEdge API
  description: |
    Fastedge is edge compute service which allows to execute edge apps, compiled to WebAssembly, on CDN edges.<br>
    Fastedge currently is in closed beta, therefore API is not stable and may change at any time without prior notice.<br>
    <br/><br/>
    FastEdge API base url: https://api.___serverHost___/fastedge
  
    # Authentication
  
    You can find the available authorization methods in this section: [Authorization methods](https://api.___serverHost___/docs/iam#section/Authentication).
  version: 1.0.0

servers:
- url: https://api.___serverHost___/fastedge

tags:
  - name: Binaries
    description: Binaries are WebAssembly executables that are actually executed when app is ran.
  - name: Apps
    description: Apps are descriptions of edge apps, that reference the binary and may contain app-specific settings, such as environment variables.
  - name: Stats
    description: Statistics of edge app use
  - name: Clients
    description: Client-level settings and limits
  - name: Groups
    description: Client groups for binary visibility

paths:
  /v1/stats/total_calls:
    get:
      tags:
      - Stats
      summary: Call stats for all client apps
      operationId: TotalCalls
      parameters:
      - name: from
        in: query
        description: Reporting period start time, RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: Reporting period end time (not included into reporting period), RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: step
        in: query
        description: Reporting granularity, in seconds
        required: true
        schema:
          type: integer
          default: 60
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - stats
                properties:
                  stats:
                    type: array
                    items:
                      $ref: '#/components/schemas/call_stats'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/stats/app_calls/{id}:
    get:
      tags:
      - Stats
      summary: Call stats for specific app
      operationId: AppCalls
      parameters:
      - name: id
        in: path
        description: App id
        required: true
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        description: Reporting period start time, RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: Reporting period end time (not included into reporting period), RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: step
        in: query
        description: Reporting granularity, in seconds
        required: true
        schema:
          type: integer
          default: 60
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - stats
                properties:
                  stats:
                    type: array
                    items:
                      $ref: '#/components/schemas/call_stats'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/stats/app_duration/{id}:
    get:
      tags:
      - Stats
      summary: Execution duration stats for specific app
      operationId: AppDuration
      parameters:
      - name: id
        in: path
        description: App id
        required: true
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        description: Reporting period start time, RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: Reporting period end time (not included into reporting period), RFC3339 format
        required: true
        schema:
          type: string
          format: date-time
      - name: step
        in: query
        description: Reporting granularity, in seconds
        required: true
        schema:
          type: integer
          default: 60
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - stats
                properties:
                  stats:
                    type: array
                    items:
                      $ref: '#/components/schemas/duration_stats'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
 
  /v1/binaries:
    get:
      tags:
      - Binaries
      summary: List client's binaries
      operationId: listBinaries
      parameters:
      - name: shared
        in: query
        description: Binaries shared with me
        required: false
        schema:
          type: boolean
          default: false
      - name: named
        in: query
        description: Binaries with non-empty name
        required: false
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - binaries
                properties:
                  binaries:
                    type: array
                    items:
                      $ref: '#/components/schemas/binary_short'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/binaries/raw:
    post:
      tags:
      - Binaries
      summary: Store compiled WASM binary
      operationId: storeBinary
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: integer
                format: int64
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        413:
          description: Binary is too big
        429:
          description: Limit exceeded
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
  /v1/binaries/{id}:
    get:
      tags:
      - Binaries
      summary: Get binary
      operationId: getBinary
      parameters:
      - name: id
        in: path
        description: Binary ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/binary'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - Binaries
      summary: Delete a binary
      operationId: delBinary
      parameters:
      - name: id
        in: path
        description: Binary ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
  /v1/binaries/{id}/metadata:
    get:
      tags:
      - Binaries
      summary: Get binary metadata
      operationId: getBinaryMetadata
      parameters:
      - name: id
        in: path
        description: Binary ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/binary_metadata'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - Binaries
      summary: Add/update binary metadata
      operationId: updateBinaryMetadata
      parameters:
      - name: id
        in: path
        description: Binary ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Binary metadata details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/binary_metadata'
        required: false
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string

  /v1/apps:
    get:
      tags:
      - Apps
      summary: List client's apps
      operationId: listApps
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - apps
                properties:
                  apps:
                    type: array
                    items:
                      $ref: '#/components/schemas/app_short'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - Apps
      summary: Add a new app
      operationId: addApp
      requestBody:
        description: App details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app'
        required: false
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_short'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        429:
          description: Limit exceeded
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: app
  /v1/apps/{id}:
    get:
      tags:
      - Apps
      summary: Get app details
      operationId: getApp
      parameters:
      - name: id
        in: path
        description: ID of the app
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - Apps
      summary: Update an app
      operationId: updateApp
      parameters:
      - name: id
        in: path
        description: ID of the app
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: App details
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/app'
                - type: object
                  required:
                  - binary
                  - status
        required: false
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_short'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: app
    patch:
      tags:
      - Apps
      summary: Update an app
      operationId: patchApp
      parameters:
      - name: id
        in: path
        description: ID of the app
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: App details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app'
        required: false
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_short'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: app
    delete:
      tags:
      - Apps
      summary: Delete an app
      operationId: delApp
      parameters:
      - name: id
        in: path
        description: ID of the app
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
          content: {}
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string
  /v1/apps/by-name/{name}:
    get:
      tags:
      - Apps
      summary: Get app id by app name
      operationId: getAppIdByName
      parameters:
      - name: name
        in: path
        description: Name of the app
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: integer
                format: int64
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/apps/{id}/logs:
    get:
      summary: List application logs
      tags:
      - Apps 
      description: 'List logs for the app'
      parameters:
      - name: id
        in: path
        description: ID of the app
        required: true
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        description: Reporting period start time, RFC3339 format. Default 1 hour ago.
        schema:
          type: string
          format: date-time
          example: 2023-12-31T23:59:59Z
      - name: to
        in: query
        description: Reporting period end time, RFC3339 format. Default current time in UTC.
        schema:
          type: string
          format: date-time
          example: 2024-01-31T23:59:59Z
      - name: edge
        in: query
        description: Edge name
        schema:
          type: string
          format: string
      - name: sort
        in: query
        description: Sort order (default desc)
        schema:
          type: string
          format: string
          enum: [desc, asc]
      - name: current_page
        in: query
        description: Current page
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: Page size
        schema:
          type: integer
          format: int64
          default: 25
      - name: search
        in: query
        description: Search string
        example: "upstream timeout"
        schema:
          type: string
          format: string
      - name: client_ip 
        in: query
        description: Search by client IP
        example: "8.8.4.4"
        schema:
          type: string
          format: ipv4
      responses:
        '200':
          description: A paged array of logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    description: Number of logs per page
                  current_page:
                    type: integer
                    description: Current page number
                  total_pages:
                    type: integer
                    description: Total number of pages
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/log'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
        503:
          description: Service unavailable
          content:
            text/plain:
              schema:
                type: string

  /v1/me:
    get:
      tags:
      - Clients
      summary: Get status and limits for the client
      operationId: getClientMe
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string

  /v1/groups:
    get:
      tags:
      - Groups
      summary: List my groups
      operationId: listGroups
      parameters:
        - in: query
          name: member_of
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                - groups
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/group_short'
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    post:
      tags:
      - Groups
      summary: Add new group
      operationId: addGroup
      requestBody:
        description: Group description
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              properties:
                name:
                  type: string
                  description: Group name
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: integer
                format: int64
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/groups/{id}:
    get:
      tags:
      - Groups
      summary: Group details
      operationId: getGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
      - Groups
      summary: Update group
      operationId: updateGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Group description
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              properties:
                name:
                  type: string
                  description: Group name
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - Groups
      summary: Delete group
      operationId: delGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        description: Delete even if group is non-empty
        required: false
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/groups/{id}/member:
    post:
      tags:
      - Groups
      summary: Add member to the group
      operationId: addToGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Member details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_member'
        required: false
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        429:
          description: Limit exceeded
          content:
            text/plain:
              schema:
                type: string
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
      - Groups
      summary: Leave group
      operationId: leaveGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
  /v1/groups/{id}/member/{member_id}:
    delete:
      tags:
      - Groups
      summary: Remove member from the group
      operationId: delFromGroup
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
          format: int64
      - name: member_id
        in: path
        description: Member client ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Ok
        400:
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorised
        500:
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    app_short:
      required:
      - id
      - name
      - url
      - status
      - binary
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: App ID
        name:
          type: string
          description: App name
        url:
          type: string
          description: App URL
        status:
          type: integer
          description: 'Status code:<br>0 - draft (inactive)<br>1 - enabled<br>2 - disabled<br>3/4 - hourly/daily call limit exceeded)'
        binary:
          type: integer
          format: int64
          description: Binary ID
        comment:
          type: string
          description: Description of the binary
    app:
      type: object
      properties:
        name:
          type: string
          description: App name
        url:
          type: string
          readOnly: true
          description: App URL
        binary:
          type: integer
          format: int64
          description: Binary ID
        status:
          type: integer
          description: 'Status code:<br>0 - draft (inactive)<br>1 - enabled<br>2 - disabled<br>3/4 - hourly/daily call limit exceeded)'
        plan:
          readOnly: true
          type: string
          description: Plan name
        env:
          type: object
          description: Environment variables
          additionalProperties:
            type: string
          example:
            var1: value1
            var2: value2
        rsp_headers:
          type: object
          description: Extra headers to add to the response
          additionalProperties:
            type: string
          example:
            header1: value1
            header2: value2
        log:
          type: string
          description: Logging channel (by default - kafka, which allows exploring logs with API)
          nullable: true
          enum: [kafka, none]
        debug:
          type: boolean
          writeOnly: true
          description: Switch on logging for 30 minutes (switched off by default)
          default: false
        debug_until:
          type: string
          format: date-time
          readOnly: true
          description: When debugging finishes
        comment:
          type: string
          description: Description of the binary
    binary_short:
      required:
      - id
      - group_id
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Binary ID
        status:
          type: integer
          description: 'Status code:<br>0 - pending<br>1 - compiled<br>2 - compilation failed (errors available)<br>3 - compilation failed (errors not available)<br>4 - resulting binary exceeded the limit<br>5 - unsupported source language'
        unref_since:
          type: string
          description: Not used since (UTC)
        name:
          type: string
          description: Name of the template
        descr:
          type: string
          description: Short description of the template
        group_id:
          type: integer
          format: int64
          description: Binary ID
    binary:
      required:
      - status
      - type
      - group_id
      type: object
      properties:
        status:
          type: integer
          description: 'Status code:<br>0 - pending<br>1 - compiled<br>2 - compilation failed (errors available)<br>3 - compilation failed (errors not available)<br>4 - resulting binary exceeded the limit<br>5 - unsupported source language'
        type:
          type: integer
          description: Type
        errors:
          type: string
          description: Compilation errors
        unref_since:
          type: string
          description: Not used since (UTC)
        name:
          type: string
          description: Name of the template
        descr:
          type: string
          description: Short description of the template
        group_id:
          type: integer
          format: int64
          description: Binary ID
    binary_metadata:
      type: object
      required:
      - name
      - params
      - group_id
      properties:
        name:
          type: string
          description: Name of the template
        descr:
          type: string
          description: Short description of the template
        long_descr:
          type: string
          description: Long description of the template
        group_id:
          type: integer
          format: int64
          description: The group binary shared to (0 - not shared)
        params:
          type: array
          description: Parameters
          items:
            $ref: '#/components/schemas/binary_param'
    binary_param:
      type: object
      required:
      - name
      - data_type
      - mandatory
      properties:
        name:
          type: string
          description: Parameter name
        data_type:
          type: string
          description: Parameter type
          enum: [string, number, date, time]
        mandatory:
          type: boolean
          description: Is this field mandatory?
          default: false
    call_stats:
      type: object
      description: Edge app call statistics
      required:
      - time
      - count_by_status
      properties:
        time:
          type: string
          format: date-time
          description: Beginning ot reporting slot
        count_by_status:
          type: array
          description: Count by status
          items:
            $ref: '#/components/schemas/count_by_status'
    count_by_status:
      type: object
      required:
      - status
      - count
      properties:
        status:
          type: integer
          description: HTTP status
        count:
          type: integer
          description: Number of app calls
    duration_stats:
      type: object
      description: Edge app execution duration statistics
      required:
      - time
      - min
      - max
      - avg
      - median
      - perc75
      - perc90
      properties:
        time:
          type: string
          format: date-time
          description: Beginning ot reporting slot
        min:
          type: integer
          format: int64
          description: Min duration in usec
        max:
          type: integer
          format: int64
          description: Max duration in usec
        avg:
          type: integer
          format: int64
          description: Average duration in usec
        median:
          type: integer
          format: int64
          description: Median (50% percentile) duration in usec
        perc75:
          type: integer
          format: int64
          description: 75% percentile duration in usec
        perc90:
          type: integer
          format: int64
          description: 90% percentile duration in usec
    client:
      required:
      - status
      - hourly_limit
      - hourly_consumption
      - daily_limit
      - daily_consumption
      - app_limit
      - app_count
      type: object
      properties:
        status:
          type: integer
          description: 'Status code:<br>1 - enabled<br>2 - disabled<br>3/4 - hourly/daily call limit exceeded)'
        hourly_limit:
          type: integer
          description: Max allowed calls for all apps during an hour
        hourly_consumption:
          type: integer
          description: Actual number of calls for all apps during the current hour
        daily_limit:
          type: integer
          description: Max allowed calls for all apps during a day (UTC)
        daily_consumption:
          type: integer
          description: Actual number of calls for all apps during the current day (UTC)
        app_limit:
          type: integer
          description: Max allowed number of apps
        app_count:
          type: integer
          description: Actual allowed number of apps
    log:
      type: object
      properties:
        id:
          type: string
          title: Id of the log
          description: Id of the log
        app_name:
          type: string
          title: Name of the application
          description: Name of the application
        timestamp:
          type: string
          format: date-time
          title: Timstamp of a log in RFC3339 format
          description: Timestamp of a log in RFC3339 format
        log:
          type: string
          title: Log message
          description: Log message
        edge:
          type: string
          title: Edge name 
          description: Edge name
        client_ip:
          type: string
          title: Client IP
          description: Client IP
    group_short:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
          description: App ID
        name:
          type: string
          description: App name
    group:
      type: object
      required:
      - id
      - capacity
      - name
      - members
      properties:
        id:
          type: integer
          format: int64
          description: Group ID
        capacity:
          type: integer
          description: Max number of members (0 means unlimited)
        name:
          type: string
          description: Group name
        members:
          type: array
          items:
            $ref: '#/components/schemas/group_member'
    group_member:
      type: object
      required:
      - id
      properties:
        id:
          type: integer
          format: int64
          description: App ID
        name:
          type: string
          description: Member name
        can_share:
          type: boolean
          description: Can the member share binaries to the group?
